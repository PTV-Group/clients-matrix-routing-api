/* tslint:disable */
/* eslint-disable */
/**
 * Matrix Routing
 * With the Matrix Routing service you can compute distances and travel times between a set of origins and destinations.
 *
 * The version of the OpenAPI document: 1.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Location } from './Location';
import {
    LocationFromJSON,
    LocationFromJSONTyped,
    LocationToJSON,
} from './Location';

/**
 * 
 * @export
 * @interface ListOfLocations
 */
export interface ListOfLocations {
    /**
     * The list of locations.The first location is the start and the last is the destination of the route. Additional intermediate locations are possible.
     * @type {Array<Location>}
     * @memberof ListOfLocations
     */
    locations?: Array<Location>;
}

/**
 * Check if a given object implements the ListOfLocations interface.
 */
export function instanceOfListOfLocations(value: object): value is ListOfLocations {
    return true;
}

export function ListOfLocationsFromJSON(json: any): ListOfLocations {
    return ListOfLocationsFromJSONTyped(json, false);
}

export function ListOfLocationsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListOfLocations {
    if (json == null) {
        return json;
    }
    return {
        
        'locations': json['locations'] == null ? undefined : ((json['locations'] as Array<any>).map(LocationFromJSON)),
    };
}

export function ListOfLocationsToJSON(value?: ListOfLocations | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'locations': value['locations'] == null ? undefined : ((value['locations'] as Array<any>).map(LocationToJSON)),
    };
}

