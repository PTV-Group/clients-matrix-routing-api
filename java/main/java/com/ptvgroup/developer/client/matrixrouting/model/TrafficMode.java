/*
 * Matrix Routing
 * With the Matrix Routing service you can compute distances and travel times between a set of origins and destinations.
 *
 * The version of the OpenAPI document: 1.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ptvgroup.developer.client.matrixrouting.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import io.swagger.annotations.ApiModel;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Defines how to consider traffic in a matrix calculation. * &#x60;AVERAGE&#x60; - Use the average **travelTime** for the selected vehicle.  If **startTime** is specified, the typical traffic situation for that time of day and day of week will be considered such as the rushhour  on Monday morning or light traffic on Saturday evening. Toll will be calculated according to that date and time. * &#x60;REALISTIC&#x60; - Use the most realistic **travelTime** for the selected vehicle and the  given **startTime**.  Takes into account the live traffic situation such as traffic jams or road works  as well as the typical traffic situation at the time of day and the day of week of travel such as the rushhour  on Monday morning or light traffic on Saturday evening.  See [here](./concepts/time-dependent-matrix) for more information.
 */
public enum TrafficMode {
  
  AVERAGE("AVERAGE"),
  
  REALISTIC("REALISTIC");

  private String value;

  TrafficMode(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static TrafficMode fromValue(String value) {
    for (TrafficMode b : TrafficMode.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }
}

